AWSTemplateFormatVersion: 2010-09-09
Description: Database Tier Template

Parameters:
  Env:
    Type: String

Resources:
  DatabaseSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "Database credentials"
      GenerateSecretString:
        SecretStringTemplate: '{"username": "dbuser"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: "Name"
          Value: !Sub ${Env}-three-tier-app-database-tier-secret

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Database Tier Security Group"
      VpcId: Fn::ImportValue: !Sub ${Env}-VpcId
      Tags:
        - Key: "Name"
          Value: !Sub ${Env}-three-tier-app-database-sg

  Database:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      EngineMode: serverless
      DBSubnetGroupName: Fn::ImportValue: !Sub ${Env}-DatabaseTierSubnetGroupId
      ScalingConfiguration:
        AutoPause: True
        MaxCapacity: 1
        MinCapacity: 1
        SecondsUntilAutoPause: 300
      MasterUsername:
        !Join [
          ":",
          [
            "{{resolve:secretsmanager",
            !Ref DatabaseSecret,
            "SecretString",
            "username}}",
          ],
        ]
      MasterUserPassword:
        !Join [
          ":",
          [
            "{{resolve:secretsmanager",
            !Ref DatabaseSecret,
            "SecretString",
            "password}}",
          ],
        ]
      VpcSecurityGroupIds:
        - !Ref DatabaseSecurityGroup
      Tags:
        - Key: "Name"
          Value: !Sub ${Env}-three-tier-app-database

  DatabaseSecurityGroupIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: !GetAtt Database.Endpoint.Port
      ToPort: !GetAtt Database.Endpoint.Port
      SourceSecurityGroupId: Fn::ImportValue: !Sub ${Env}-MiddlewareInstanceSecurityGroupId
      GroupId: !Ref DatabaseSecurityGroup
