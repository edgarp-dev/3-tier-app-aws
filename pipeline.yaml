AWSTemplateFormatVersion: 2010-09-09
Description: 3 Tier App Pipeline Template

Parameters:
  GithubOAuthToken:
    Type: String
    NoEcho: true
    AllowedPattern: '[A-Za-z0-9_]*'

  GithubOwner:
    Type: String
    Default: edgarp-dev
    AllowedPattern: "[A-Za-z0-9-]+"

  GithubRepo:
    Type: String
    Default: 3-tier-app-aws
    AllowedPattern: "[A-Za-z0-9-]+"

  GithubBranch:
    Type: String
    Default: main
    AllowedPattern: "[A-Za-z0-9-_]+"

  ApplicationStackName:
    Type: String
    Default: three-tier-app-codepipeline
    AllowedPattern: "[A-Za-z0-9-]+"
  
Resources:
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
  
  ValidationCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAssumeRole
            Effect: Allow
            Principal:
              Service: "codebuild.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CodeBuild
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "ecr:GetAuthorizationToken"
                  - "s3:GetBucketAcl"
                  - "s3:GetBucketLocation"
                  - "cloudformation:*"
                  - "iam:PassRole"
                Resource: "*"
          PolicyName: BuildPolicy
  
  ValidationCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt ValidationCodeBuildRole.Arn
      Name: three-tier-app-validation-codebuild
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
  
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: "codepipeline.amazonaws.com"
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: ThreeTierCodePipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                  - 'cloudwatch:*'
                  - 'cloudformation:*'
                  - "s3:*"
                  - "iam:PassRole"
                Resource: '*'
  
  CfnRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref PipelineArtifactsBucket
        Type: S3
      Name: Three-Tier-App-Pipeline
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              InputArtifacts: []
              Name: Source
              OutputArtifacts:
                - Name: SourceCode
              Configuration:
                Owner: !Ref GithubOwner
                Repo: !Ref GithubRepo
                Branch: !Ref GithubBranch
                PollForSourceChanges: false
                OAuthToken: !Ref GithubOAuthToken
              RunOrder: 1
        - Name: Validate
          Actions:
            - InputArtifacts:
                - Name: SourceCode
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Name: Validate
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref ValidationCodeBuild
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              InputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt CfnRole.Arn
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: three-tier-app-stack
                TemplatePath: BuildOutput::main.yaml
  
  GithubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GithubOAuthToken
      RegisterWithThirdParty: 'true'
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref Pipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt Pipeline.Version